{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/phonebook.js","App.js","index.js"],"names":["Filter","search","handleSearch","value","onChange","PersonForm","persons","updateNumber","setPersons","addPerson","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","names","map","person","name","newPerson","number","includes","id","find","p","window","confirm","target","type","Persons","deletePerson","onClick","Notification","message","isSuccess","className","baseUrl","phonebookService","getAll","axios","get","then","response","data","post","delete","put","App","setSearch","setMessage","setIsSuccess","useEffect","notify","msg","success","setTimeout","searchedPersons","filter","toLowerCase","updatedPerson","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5b95e44.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ search, handleSearch }) => {\n    return (\n        <div>\n            <input value={search} onChange={handleSearch} />\n        </div>\n    )\n}\n\nexport default Filter","import React, { useState } from 'react'\n\nconst PersonForm = ({ persons, setPersons, updateNumber, addPerson }) => {\n\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n\n    const handleNewName = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNewNumber = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const names = persons.map(person => person.name)\n        const newPerson = {\n            name: newName,\n            number: newNumber\n        }\n        if (names.includes(newName)) {\n            const id = persons.find(p => p.name === newName).id\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                updateNumber(id, newPerson)\n            }\n        } else {\n            addPerson(newPerson)\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                Name: <input value={newName} onChange={handleNewName} />\n            </div>\n            <div>\n                Number: <input value={newNumber} onChange={handleNewNumber} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ persons, deletePerson }) => {\n    return (\n        persons.map(person =>\n            <div key={person.id}>\n                {person.name} {person.number}\n                <button onClick={() => deletePerson(person.id, person)}>delete</button>\n            </div>)\n    )\n\n}\n\nexport default Persons","const Notification = ({ message, isSuccess }) => {\n    if (message === null) return null\n    else {\n        return (\n            <div className={isSuccess ? 'success' : 'error'}>{\n                message}\n            </div>\n        )\n    }\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios\n        .get(baseUrl)\n        .then(response => response.data)\n}\n\nconst addPerson = newPerson => {\n    return axios\n        .post(baseUrl, newPerson)\n        .then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    return axios\n        .delete(`${baseUrl}/${id}`)\n}\n\nconst updateNumber = (id, newPerson) => {\n    return axios\n        .put(`${baseUrl}/${id}`, newPerson)\n        .then(response => response.data)\n}\n\nconst phonebookService = { getAll, addPerson, deletePerson, updateNumber }\n\nexport default phonebookService","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport './index.css'\n\nimport phonebookService from './services/phonebook'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [search, setSearch] = useState('')\n    const [message, setMessage] = useState(null)\n    const [isSuccess, setIsSuccess] = useState(true)\n\n    useEffect(() => {\n        phonebookService\n            .getAll()\n            .then(persons => {\n                setPersons(persons)\n            })\n    }, [])\n\n    const handleSearch = (event) => setSearch(event.target.value)\n\n    const notify = (msg, success) => {\n        setIsSuccess(success)\n        setMessage(msg)\n        setTimeout(() => {\n            setMessage(null)\n        }, 5000)\n    }\n\n    const searchedPersons =\n        search === ''\n            ? persons\n            : persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\n\n    const deletePerson = (id, person) => {\n        if (window.confirm(`Delete ${person.name}?`)) {\n            phonebookService\n                .deletePerson(id)\n                .then(setPersons(persons.filter(person => person.id !== id)))\n                .catch(error => {\n                    const msg = `Information of ${person} has already been removed from server`\n                    notify(msg, false)\n                })\n        }\n    }\n\n    const updateNumber = (id, newPerson) => {\n        phonebookService\n            .updateNumber(id, newPerson)\n            .then(updatedPerson => {\n                setPersons(persons\n                    .map(person =>\n                        person.id === updatedPerson.id\n                            ? updatedPerson\n                            : person))\n            })\n            .catch(error => {\n                const msg = `Information of ${newPerson.name} has already been removed from server`\n                notify(msg, false)\n            })\n    }\n\n    const addPerson = (newPerson) => {\n        phonebookService\n            .addPerson(newPerson)\n            .then(newPerson => {\n                setPersons(persons.concat(newPerson))\n                notify(`Added ${newPerson.name}`, true)\n            })\n            .catch(error => {\n                notify(error.response.data.error, false)\n            })\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} isSuccess={isSuccess} />\n            Filter\n            <Filter search={search} handleSearch={handleSearch} />\n            <h3>Add New Entry</h3>\n            <PersonForm persons={persons} setPersons={setPersons} updateNumber={updateNumber} addPerson={addPerson} />\n            <h3>Numbers</h3>\n            <Persons persons={searchedPersons} deletePerson={deletePerson} />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}